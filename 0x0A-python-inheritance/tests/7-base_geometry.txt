#import module

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

#documentation

	>>> module_doc = __import__('7-base_geometry').__doc__
	>>> print(len(module_doc) > 0)
	True

	>>> class_doc = __import__('7-base_geometry').BaseGeometry.__doc__
	>>> print(len(class_doc) > 0)
	True

	>>> function_doc = __import__('7-base_geometry').BaseGeometry.area.__doc__
	>>> print(len(function_doc) > 0)
	True

	>>> function_doc = __import__('7-base_geometry').BaseGeometry.integer_validator.__doc__
	>>> print(len(function_doc) > 0)
	True

#general test

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator("lenght", 5)

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator("lenght", 50000000)

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator(5)
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator("x")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator(1, 2, 3)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator("x", 2.5)
	Traceback (most recent call last):
	TypeError: x must be an integer

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator("x", None)
	Traceback (most recent call last):
	TypeError: x must be an integer

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator("x", float('NaN'))
	Traceback (most recent call last):
	TypeError: x must be an integer

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator("x", False)
	Traceback (most recent call last):
	TypeError: x must be an integer

	>>> bgeo = BaseGeometry()
	
	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator("x", -3)
	Traceback (most recent call last):
	ValueError: x must be greater than 0

	>>> bgeo = BaseGeometry()
	>>> bgeo.integer_validator("x", 0)
	Traceback (most recent call last):
	ValueError: x must be greater than 0

	>>> bgeo = BaseGeometry()
	>>> bgeo.area()
	Traceback (most recent call last):
	Exception: area() is not implemented
