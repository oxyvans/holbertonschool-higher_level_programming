>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> BaseGeometry = BaseGeometry()

>>> BaseGeometry.integer_validator("zero", 0)
Traceback (most recent call last):
ValueError: zero must be greater than 0

>>> BaseGeometry.integer_validator("negative", -10)
Traceback (most recent call last):
ValueError: negative must be greater than 0

>>> BaseGeometry.integer_validator("float", 1.0)
Traceback (most recent call last):
TypeError: float must be an integer

>>> BaseGeometry.integer_validator("negative_float", -1.0)
Traceback (most recent call last):
TypeError: negative_float must be an integer

>>> BaseGeometry.integer_validator("boolean", True)
Traceback (most recent call last):
TypeError: boolean must be an integer

>>> BaseGeometry.integer_validator("list", [0, 1, 2, 3])
Traceback (most recent call last):
TypeError: list must be an integer

>>> BaseGeometry.integer_validator("set", set([0, 1, 2, 3]))
Traceback (most recent call last):
TypeError: set must be an integer

>>> BaseGeometry.integer_validator("touple", (0, 1))
Traceback (most recent call last):
TypeError: touple must be an integer

>>> BaseGeometry.integer_validator("string", "Holberton")
Traceback (most recent call last):
TypeError: string must be an integer

>>> BaseGeometry.integer_validator("None", None)
Traceback (most recent call last):
TypeError: None must be an integer

>>> BaseGeometry.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> BaseGeometry.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> BaseGeometry.area(0)
Traceback (most recent call last):
TypeError: area() takes 1 positional argument but 2 were given
